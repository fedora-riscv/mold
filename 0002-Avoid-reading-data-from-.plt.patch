From 273a9454227c77d35b2d1f0825ac54df3594c7dc Mon Sep 17 00:00:00 2001
Message-ID: <273a9454227c77d35b2d1f0825ac54df3594c7dc.1692793305.git.github@sicherha.de>
In-Reply-To: <8d9997302c9fc21158dae930cb02561b79524eef.1692793305.git.github@sicherha.de>
References: <8d9997302c9fc21158dae930cb02561b79524eef.1692793305.git.github@sicherha.de>
From: Rui Ueyama <ruiu@bluewhale.systems>
Date: Wed, 23 Aug 2023 12:53:26 +0900
Subject: [PATCH 2/3] Avoid reading data from .plt

With `--execute-only`, the text segment may not be readable.

Fixes https://github.com/rui314/mold/issues/1087
---
 elf/arch-ppc64v2.cc | 19 ++++++++++---------
 elf/elf.h           |  2 +-
 2 files changed, 11 insertions(+), 10 deletions(-)

diff --git a/elf/arch-ppc64v2.cc b/elf/arch-ppc64v2.cc
index 91c1fa91..e2a578cd 100644
--- a/elf/arch-ppc64v2.cc
+++ b/elf/arch-ppc64v2.cc
@@ -112,25 +112,26 @@ void write_plt_header(Context<E> &ctx, u8 *buf) {
     0x7c08'03a6, // mtlr    r0
 
     // Compute the PLT entry index
-    0xe80b'002c, // ld      r0, 44(r11)
-    0x7d8b'6050, // subf    r12, r11, r12
-    0x7d60'5a14, // add     r11, r0, r11
-    0x380c'ffcc, // addi    r0, r12, -52
+    0x398c'ffd4, // addi    r12, r12, -44
+    0x7c0b'6050, // subf    r0, r11, r12
     0x7800'f082, // rldicl  r0, r0, 62, 2
 
+    // Compute the address of .got.plt
+    0x3d6b'0000, // addis   r11, r11, GOTPLT_OFFSET@ha
+    0x396b'0000, // addi    r11, r11, GOTPLT_OFFSET@lo
+
     // Load .got.plt[0] and .got.plt[1] and branch to .got.plt[0]
     0xe98b'0000, // ld      r12, 0(r11)
     0x7d89'03a6, // mtctr   r12
     0xe96b'0008, // ld      r11, 8(r11)
     0x4e80'0420, // bctr
-
-    // .quad .got.plt - .plt - 8
-    0x0000'0000,
-    0x0000'0000,
   };
 
   memcpy(buf, insn, sizeof(insn));
-  *(ul64 *)(buf + 52) = ctx.gotplt->shdr.sh_addr - ctx.plt->shdr.sh_addr - 8;
+
+  i64 val = ctx.gotplt->shdr.sh_addr - ctx.plt->shdr.sh_addr - 8;
+  *(ul32 *)(buf + 28) |= higha(val);
+  *(ul32 *)(buf + 32) |= lo(val);
 }
 
 template <>
diff --git a/elf/elf.h b/elf/elf.h
index 12ece2bb..51e86eec 100644
--- a/elf/elf.h
+++ b/elf/elf.h
@@ -2193,7 +2193,7 @@ struct PPC64V2 {
   static constexpr bool is_rela = true;
   static constexpr u32 page_size = 65536;
   static constexpr u32 e_machine = EM_PPC64;
-  static constexpr u32 plt_hdr_size = 60;
+  static constexpr u32 plt_hdr_size = 52;
   static constexpr u32 plt_size = 4;
   static constexpr u32 pltgot_size = 0;
   static constexpr u32 thunk_hdr_size = 0;
-- 
2.41.0

